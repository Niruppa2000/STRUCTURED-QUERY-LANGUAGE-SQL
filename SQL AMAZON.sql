USE AMAZONDB;
SELECT * FROM USERS;
-- CUSTOMERS WHO MADE PURCHASE MORE THAN 80$.
SELECT U.NAME,U.EMAIL, SUM(TOTAL_AMOUNT) AS TOTAL_AMOUNT
FROM USERS U
INNER JOIN ORDERS O  ON U.user_id = O.user_id
GROUP BY U.USER_ID
HAVING TOTAL_AMOUNT > 80;

-- ORDERS PLACED IN LAST 280 DAYS ALONG WITH CUSTOMER NAME AND EMAIL. 
SELECT 
    U.NAME, 
    U.EMAIL, 
    O.ORDER_ID, 
    O.ORDER_DATE, 
    O.TOTAL_AMOUNT
FROM 
    ORDERS O
JOIN 
    USERS U ON O.USER_ID = U.USER_ID
WHERE 
    O.ORDER_DATE >= CURDATE() - INTERVAL 280 DAY;

-- AVERAGE PRODUCT PRICE FOR EACH CATEGORY.
SELECT CATEGORY, AVG(PRICE) AS AVG_PRICE
FROM PRODUCTS
GROUP BY CATEGORY;

-- CUSTOMERS WHO HAVE PURCHASED A PRODUCT FROM CATEGORY ELECTRONICS.
SELECT DISTINCT
    U.NAME,U.EMAIL
FROM USERS U
JOIN ORDERS O ON U.USER_ID = O.USER_ID
JOIN ORDERDETAILS OD ON O.ORDER_ID = OD.ORDER_ID
JOIN PRODUCTS P ON OD.PRODUCT_ID = P.PRODUCT_ID
WHERE P.CATEGORY = 'ELECTRONICS';

-- TOTAL NUMBER OF PRODUCTS SOLD AND TOTAL REVENUE GENERATED FOR EACH PRODUCT. 
SELECT P.NAME AS PRODUCT_NAME,
       SUM(OD.QUANTITY) AS TOTAL_QUANTITY_SOLD,
       SUM(OD.QUANTITY*P.PRICE) AS TOTAL_REVENUE
FROM ORDERDETAILS OD
JOIN PRODUCTS P ON OD.PRODUCT_ID = P.PRODUCT_ID
GROUP BY P.PRODUCT_ID;

-- UPDATE THE PRICE OF ALL PRODUCTS IN THE BOOKS CATEGORY BY 10%. 
ALTER TABLE PRODUCTS 
MODIFY PRICE DECIMAL(12 ,2);
SELECT product_id, price FROM Products WHERE category = 'Books';

SET SQL_SAFE_UPDATES = 0;

UPDATE 
    Products
SET 
    price = price * 1.10
WHERE 
    category = 'Books';
    
    -- 7. Remove all orders that were placed before 2020.

DELETE FROM 
    Orders
WHERE 
    order_date < '2020-01-01'; 
--  Fetch the order details, including customer name, product name, and quantity, for orders placed on 2024-11-01.

SELECT 
    O.order_id, 
    U.name AS customer_name, 
    P.name AS product_name, 
    OD.quantity
FROM 
    Orders O
JOIN 
    Users U ON O.user_id = U.user_id
JOIN 
    OrderDetails OD ON O.order_id = OD.order_id
JOIN 
    Products P ON OD.product_id = P.product_id
WHERE 
    O.order_date = '2024-5-01'; 
    
-- Fetch all customers and the total number of orders they have placed.

SELECT 
    U.name AS customer_name, 
    U.email, 
    COUNT(O.order_id) AS total_orders
FROM 
    Users U
LEFT JOIN 
    Orders O ON U.user_id = O.user_id
GROUP BY 
    U.user_id;
    
    
--  List all customers who purchased more than 1 units of any product, including the product name and total quantity purchased.
SELECT 
    U.name AS customer_name, 
    U.email, 
    P.name AS product_name, 
    SUM(OD.quantity) AS total_quantity
FROM 
    Users U
JOIN 
    Orders O ON U.user_id = O.user_id
JOIN 
    OrderDetails OD ON O.order_id = OD.order_id
JOIN 
    Products P ON OD.product_id = P.product_id
GROUP BY 
    U.user_id, P.product_id
HAVING 
    total_quantity > 1;
    
 --  Find the total revenue generated by each category along with the category name.
SELECT 
    P.category, 
    SUM(OD.quantity * P.price) AS total_revenue
FROM 
    Products P
JOIN 
    OrderDetails OD ON P.product_id = OD.product_id
GROUP BY 
    P.category;   
    